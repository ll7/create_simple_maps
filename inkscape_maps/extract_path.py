"""extract the information of the path in the svg file generated by InkScape"""
import xml.etree.ElementTree as ET
import re
import numpy as np

def extract_path_info(svg_file):
    """
    Extracts path information from an SVG file.

    Args:
        svg_file (str): The path to the SVG file.

    Returns:
        list: A list of dictionaries, where each dictionary contains the following information:
            - 'coordinates': A numpy array of coordinates extracted from the 'd' 
                attribute of the path.
            - 'label': The value of the 'inkscape:label' attribute of the path.
            - 'id': The value of the 'id' attribute of the path.
    """
    # Parse the SVG file
    svg_tree = ET.parse(svg_file)
    svg_root = svg_tree.getroot()

    # Define the SVG and Inkscape namespaces
    namespaces = {
        'svg': 'http://www.w3.org/2000/svg',
        'inkscape': 'http://www.inkscape.org/namespaces/inkscape'
        }

    # Find all 'path' elements in the SVG file
    paths = svg_root.findall('.//svg:path', namespaces)

    # Initialize an empty list to store the path information
    path_info = []

    # Iterate over each 'path' element
    for path in paths:
        # Extract the 'd' attribute (coordinates), 'inkscape:label' and 'id'
        coordinates = path.attrib.get('d')
        label = path.attrib.get('{http://www.inkscape.org/namespaces/inkscape}label')
        id_ = path.attrib.get('id')

        # Parse the coordinates string into a list of tuples
        coordinates = re.findall("([+-]?[0-9]*[.]?[0-9]+),([+-]?[0-9]*[.]?[0-9]+)", coordinates)
        coordinates = [(float(x), float(y)) for x, y in coordinates]

        # Convert the list of tuples into a numpy array
        coordinates = np.array(coordinates)

        # Append the information to the list
        path_info.append({'coordinates': coordinates, 'label': label, 'id': id_})

    return path_info

# Use the function
SVG_FILE_STR = 'inkscape_maps/route_draft.svg'
svg_info = extract_path_info(SVG_FILE_STR)
for info in svg_info:
    print(info)
